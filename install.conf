#!/usr/bin/env bash
set -a

# system
HOSTNAME=archlinux            # machine name
TIMEZONE=Asia/Shanghai        # timezone
LOCALE=zh_CN.UTF-8            # language
KEYMAP=us                     # set keymap if value is provided

# user
USER_NAME=arch                # add user if value is provided
PASSWORD="123@arch"           # user password,used for root too
ROOT_PASSWORD=$PASSWORD       # root password
LOGIN_SHELL=zsh               # set default shell if value is provided
ZSH_FRAMEWORK="oh-my-zsh"     # zsh management framework if $LOGIN_SHELL is zsh
AUR="yay-bin"                 # name of AUR helper:yay/yay-bin/paru/paru-bin

# partition
DISK_DEVICE=/dev/sda          # /dev/nvme0n1
EFI_DEVICE="${DISK_DEVICE}1"  # "${DISK_DEVICE}p1"
SWAP_DEVICE="${DISK_DEVICE}2" # "${DISK_DEVICE}p2"
ROOT_DEVICE="${DISK_DEVICE}3" # "${DISK_DEVICE}p3"
EFI_SIZE=1024M                # 1024M
SWAP_SIZE=4G                  # 4G
ROOT_SIZE=                    # use free sapce without value
ESP=/boot                     # EFI partition

# network(optional)
WIFI_INTERFACE=               # wifi station,iwctl station list
WIFI_ESSID=                   # wifi name
WIFI_KEY=                     # wifi password

# helper
BOLD='\e[1m'
BRED='\e[91m'
BBLUE='\e[34m'  
BGREEN='\e[92m'
BYELLOW='\e[93m'
RESET='\e[0m'

# print information message
print_info () {
    echo -e "${BOLD}${BGREEN}[ ${BYELLOW}•${BGREEN} ] $1${RESET}"
}

# print warning message
print_warning () {
    echo -e "${BOLD}${BYELLOW}[ ${BGREEN}•${BYELLOW} ] $1${RESET}"
}

# print eror message
print_error () {
    echo -e "${BOLD}${BRED}[ ${BBLUE}•${BRED} ] $1${RESET}"
}

# print section
print_section () {
    message="$1"
    message_length=${#message}
    padding=2
    line_length=50
    left_space=$((line_length - message_length - padding * 2 - 2))

    printf "%${line_length}s\n" " " | tr " " "-"
    printf "   ${message}%-${left_space}s   \n"
    printf "%${line_length}s\n" " " | tr " " "-"
}

# ask user
confirm () {
    print_warning "${1}. Are you sure? [y/N] " && read -r response
    case "$response" in
        [yY][eE][sS]|[yY])
            true
            ;;
        *)
            false
            ;;
    esac
}

# user is exists or not
user_exists () {
    name="$1"
    if id "$name" &>/dev/null; then
        echo "User '$name' exists."
        return 0
    else
        echo "User '$name' does not exist."
        return 1
    fi
}

# package is exists or not
package_exists () {
    package="$1"
    if pacman -Qs $package >/dev/null; then
        echo "Package '$package' exists."
        return 0
    else
        echo "Package '$package' does not exist."
        return 1
    fi
}

# install pacakge from list file
install_from_list () {
    file="${CONFIG_DIR}/${1}.list"
    print_info "Install ${1^} Packages"
    pacman -Sq --noconfirm --needed $(sed '/^\s*#/d; /^\s*$/d' $file)
}

set +a